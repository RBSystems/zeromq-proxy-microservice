package zeromq

/*
An Event represents a zeromq event
*/
type Event struct {
	Envelope string `json:"envelope,omitempty"`
	Data     string `json:"data,omitempty"`
}

/*
In the context of our system there are five main players.
1. Local Event Generators
2. Room Event Proxies
3. External Event Translator
4. Local Event Consumers
5. Local Proxy (this microservice)


For the purposes of this microservice, all events flow through the local proxy.
Different event types have different routing rules to the different players in the system
*/

//LocalAPI events are incoming events generated by API interactions on the current system. These events must be echoed to all paths.
//This system should never emit LocalAPI events
const LocalAPI = "local-api"

//TransmitAPI events emitted by this service were generated by the Local Event Generators (Local API) and are
//emitted for the External Translator and Room Event Proxies.
//TransmitAPI events consumed by this service were generated by other Event Generators within the same System (room)
const TransmitAPI = "trasmit-api"

//LocalTransmit events emitted by this service are the events that were generated by external (cloud) services or incoming
//TransmitAPI Events. These events are echoed for the Local Event Consumers only.
const LocalTransmit = "local-transmit"

//External events are consumed by this service and are generated by the External Event Translator. These are translated to LocalTransmit events
const External = "external"

//NotfiyStart events are used to report on the connection of Room Event Proxies
//The data for these must be the hostname of the generating proxy
const NotifyStart = "notify-start"

//AckStart events are used to acknowledge the receipt of NotifyStart Events.
//The data for these must be the hostname of the acknowledging proxy
const AckStart = "ack-start"
